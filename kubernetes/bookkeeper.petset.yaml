---
apiVersion: apps/v1alpha1
kind: PetSet
metadata:
  name: bookkeeper
  labels:
    app: onyx-twitter-sample
    component: bookkeeper
spec:
  serviceName: "bookkeeper"
  replicas: 3
  template:
    metadata:
      labels:
        app: onyx-twitter-sample
        component: bookkeeper
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.alpha.kubernetes.io/init-containers: '[
        {
            "name": "metaformat",
            "image": "onyxplatform/bookkeeper:latest",
            "imagePullPolicy": "Always",
            "command": ["/bin/bash", "-c",
                        "/opt/bookkeeper/bin/bookkeeper shell metaformat -nonInteractive || true"],
            "env": [
            {"name": "ZOOKEEPER_ADDR",
             "value": "zookeeper:2181"}
            ],
            "volumeMounts": [
                {
                  "name": "datadir",
                  "mountpath": "/data"
                }
            ]
        }
        ]'
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: bookie
        image: onyxplatform/bookkeeper:latest
        ports:
        - name: client
          containerPort: 3181
        - name: prometheus
          containerPort: 1234
        env:
        - name: "ZOOKEEPER_ADDR"
          value: "zookeeper:2181"
        - name: BOOKIE_EXTRA_OPTS
          value: "-javaagent:/opt/config/jmx_exporter/jmx_prometheus_javaagent.jar=1234:/opt/config/prometheus/bookkeeper.yaml"
        volumeMounts:
        - name: datadir
          mountPath: /data
        - name: bk-jmx-config
          mountPath: /opt/config/prometheus
        readinessProbe:
          httpGet:
            path: '/metrics'
            port: 1234
      volumes:
      - name: bk-jmx-config
        configMap:
          name: bk-jmx-config
  volumeClaimTemplates:
    - metadata:
        name: datadir
        labels:
          app: onyx-twitter-sample
          component: bookkeeper
        annotations:
          volume.alpha.kubernetes.io/storage-class: anything
        labels:
          component: bookkeeper
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
---
# A headless service to create DNS records
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    prometheus.io/scrape: "true"
    prometheus.io/port: "1234"
  name: bookkeeper
  labels:
    app: onyx-twitter-sample
    component: bookkeeper-bookie
spec:
  ports:
  ports:
    - name: bookie
      port: 3181
      protocol: TCP
    - name: prometheus
      port: 1234
  # *.bookeeper.default.svc.cluster.local
  clusterIP: None
  selector:
    component: bookkeeper
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bk-jmx-config
  labels:
    app: onyx-twitter-sample
    component: bookkeeper
  namespace: default
data:
  bookkeeper.yaml: |+
    rules:
      - pattern: "org.apache.BookKeeperService<name0=(\\w+), name1=(\\w+)><>(\\w+)"
        name: "bookkeeper_$3"
      - pattern: "org.apache.BookKeeperService<name0=(\\w+)><(\\w+)>(\\w+)"
        name: "bookkeeper_$2_$3"
      - pattern: "org.apache.BookKeeperService<name0=(\\w+), name1=(\\w+), name2=(\\w+)><>(\\w+)"
        name: "bookkeeper_$3_$4"
